/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package xogaming;

import java.applet.AudioClip;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.Window;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import static java.lang.System.in;
import java.net.URL;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author Dream10
 */
public class Player1andPlayer2 extends javax.swing.JFrame {

    /**
     * Creates new form PlayingGames
     */
    public Player1andPlayer2() throws FileNotFoundException {
        initComponents();
        centreWindow(this);
        this.setTitle("XO Game");
        this.setResizable(false);
        arrayListCount();
       setEnableFales();
       playSound("D:\\gameplaysound.wav");
       checkMusicIcon++;
      
    }
    //declare the variables of the players and also determine whose turn it is.
private String playersturn = "X";
private String X = "PLAYER X";
private String O = "PLAYER O";
Random randomX = new Random();
int upperNumber = 10;
int randomNumber;
ArrayList<Integer> buttonList = new ArrayList();
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        Button1 = new javax.swing.JButton();
        Button2 = new javax.swing.JButton();
        Button3 = new javax.swing.JButton();
        Button4 = new javax.swing.JButton();
        Button5 = new javax.swing.JButton();
        Button6 = new javax.swing.JButton();
        Button7 = new javax.swing.JButton();
        Button8 = new javax.swing.JButton();
        Button9 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        ResetButton = new javax.swing.JButton();
        ExitButton = new javax.swing.JButton();
        RecordingButton = new javax.swing.JButton();
        teamIcon = new javax.swing.JButton();
        ViewRecords = new javax.swing.JButton();
        ShowPlayerTwoName = new javax.swing.JLabel();
        ShowPlayerOneName = new javax.swing.JLabel();
        PlayMusicButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0, 204, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        Button1.setBackground(new java.awt.Color(0, 204, 204));
        Button1.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        Button1.setForeground(new java.awt.Color(0, 204, 204));
        Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button1ActionPerformed(evt);
            }
        });

        Button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button2ActionPerformed(evt);
            }
        });

        Button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button3ActionPerformed(evt);
            }
        });

        Button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button4ActionPerformed(evt);
            }
        });

        Button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button5ActionPerformed(evt);
            }
        });

        Button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button6ActionPerformed(evt);
            }
        });

        Button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button7ActionPerformed(evt);
            }
        });

        Button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button8ActionPerformed(evt);
            }
        });

        Button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button9ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 0, 0));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("ــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــ");

        jLabel3.setBackground(new java.awt.Color(255, 0, 0));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("ـــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــ");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setPreferredSize(new java.awt.Dimension(4, 0));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setPreferredSize(new java.awt.Dimension(4, 0));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setPreferredSize(new java.awt.Dimension(4, 0));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setPreferredSize(new java.awt.Dimension(4, 0));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setPreferredSize(new java.awt.Dimension(4, 0));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Button7, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Button8, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Button9, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Button2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Button3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Button4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Button5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Button6, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Button1, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                    .addComponent(Button2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Button3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Button4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Button5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Button6, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Button7, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button9, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button8, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 380, 250));

        ResetButton.setBackground(new java.awt.Color(255, 102, 204));
        ResetButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ResetButton.setForeground(new java.awt.Color(255, 255, 255));
        ResetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xogaming/icons/resetButton.png"))); // NOI18N
        ResetButton.setToolTipText("Reset");
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });
        jPanel2.add(ResetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 70, 70));

        ExitButton.setBackground(new java.awt.Color(102, 153, 255));
        ExitButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ExitButton.setForeground(new java.awt.Color(255, 255, 255));
        ExitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xogaming/icons/exit.png"))); // NOI18N
        ExitButton.setToolTipText("Exit");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });
        jPanel2.add(ExitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 70, 50));

        RecordingButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xogaming/icons/record.png"))); // NOI18N
        RecordingButton.setToolTipText("Record");
        RecordingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecordingButtonActionPerformed(evt);
            }
        });
        jPanel2.add(RecordingButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 70, 50));

        teamIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xogaming/icons/teamicon.png"))); // NOI18N
        teamIcon.setToolTipText("Add Team Info");
        teamIcon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamIconActionPerformed(evt);
            }
        });
        jPanel2.add(teamIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 20, 60, 50));

        ViewRecords.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xogaming/icons/viewrecords.png"))); // NOI18N
        ViewRecords.setToolTipText("View Records");
        ViewRecords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewRecordsActionPerformed(evt);
            }
        });
        jPanel2.add(ViewRecords, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 350, 60, 50));

        ShowPlayerTwoName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ShowPlayerTwoName.setForeground(new java.awt.Color(255, 255, 255));
        ShowPlayerTwoName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(ShowPlayerTwoName, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 120, 130, 50));

        ShowPlayerOneName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ShowPlayerOneName.setForeground(new java.awt.Color(255, 255, 255));
        ShowPlayerOneName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(ShowPlayerOneName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 130, 50));

        PlayMusicButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xogaming/icons/pauseMusic.png"))); // NOI18N
        PlayMusicButton.setToolTipText("Play and Enjoy");
        PlayMusicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayMusicButtonActionPerformed(evt);
            }
        });
        jPanel2.add(PlayMusicButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 410, 60, 60));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButtonActionPerformed
        // TODO add your handling code here:
        //reset the game 
        showAllButtons();
        arrayListCount();
        resetgame();
        getRandomFromList();
        testPressed.clear();
        //resetgame();
        // showAllButtons();
    }//GEN-LAST:event_ResetButtonActionPerformed
       public static String playerName;
       ArrayList<Integer> arrayButtonNumberRecording = new ArrayList<>();
       ArrayList<String> arrayButtonXorORecording = new ArrayList<>();
       int record = 0 ; 
       ArrayList<Integer> testPressed = new ArrayList<>();
    private void Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button1ActionPerformed
        // TODO add your handling code here:
        if(!testPressed.contains(1)){
            System.out.println("Button 1 ");
        buttonList.remove(new Integer(1));
        System.out.println("Array Button 1 "+ buttonList);
        jbutton1 = playersturn;
        addIconToButton(Button1);
        recordSteps(1);
        playersturn();
        System.out.println("Button 1 Next Turn " +playersturn);
        // getRandomFromList();
        // checkButtonStatus(randomNumber);
        winner();
       testPressed.add(1);
        }else{
            System.out.println("Already Pressed");
        }
       // Button1.setEnabled(false);
     //   checkRandomStatus(randomNumber);
        
        
    }//GEN-LAST:event_Button1ActionPerformed

    private void Button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button2ActionPerformed

        if(!testPressed.contains(2)){
        System.out.println("Button 2 ");
        buttonList.remove(new Integer(2));
        System.out.println("Array Button 2 "+ buttonList);
        jbutton2 = playersturn;
        addIconToButton(Button2);
      //  Button2.setText(playersturn);
        recordSteps(2);
        playersturn();
        System.out.println("Button 2 Next Turn " +playersturn);
        
        
        
      //  randomNumber = randomX.nextInt(buttonList) ; 
      //  getRandomFromList();
      //  checkButtonStatus(randomNumber);
        
        testPressed.add(2);
        
        winner(); }else{
            System.out.println("Pressed 2 ");
        }
      //  Button2.setEnabled(false);
    }//GEN-LAST:event_Button2ActionPerformed

    private void Button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button3ActionPerformed
if(!testPressed.contains(3)){
        System.out.println("Button 3 ");
        buttonList.remove(new Integer(3));
        System.out.println("Array Button 3 "+ buttonList);
        
        jbutton3 = playersturn;
        addIconToButton(Button3);
        
       // Button3.setText(playersturn);
        recordSteps(3);
        playersturn();
        System.out.println("Button 1 Next Turn " +playersturn);
        
        
        
      //  randomNumber = randomX.nextInt(buttonList) ; 
      //  getRandomFromList();
      //  checkButtonStatus(randomNumber);
        
        testPressed.add(3);
        
        winner(); 
}else{
    System.out.println("Pressed 3");
}
     //   Button3.setEnabled(false);
    }//GEN-LAST:event_Button3ActionPerformed

    private void Button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button5ActionPerformed
        if(!testPressed.contains(5)){
        System.out.println("Button 5 ");
        buttonList.remove(new Integer(5));
        System.out.println("Array Button 5 "+ buttonList);
        
        jbutton5 = playersturn;
        addIconToButton(Button5);
        
        
      //  Button5.setText(playersturn);
        recordSteps(5);
        playersturn();
        System.out.println("Button 5 Next Turn " +playersturn);
        
        
        
      //  randomNumber = randomX.nextInt(buttonList) ; 
     //   getRandomFromList();
     //   checkButtonStatus(randomNumber);
        
        testPressed.add(5);
        
        winner(); 
        }else{
            System.out.println("Pressed 5");
        }
     //   Button5.setEnabled(false);
    }//GEN-LAST:event_Button5ActionPerformed

    private void Button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button4ActionPerformed
        // TODO add your handling code here:
        if(!testPressed.contains(4)){
        System.out.println("Button 4 ");
        buttonList.remove(new Integer(4));
        System.out.println("Array Button 4 "+ buttonList);
        
        jbutton4 = playersturn;
        addIconToButton(Button4);
        
        
        // Button5.setText(playersturn);
        recordSteps(4);
        playersturn();
        System.out.println("Button 4 Next Turn " +playersturn);
        
      //  randomNumber = randomX.nextInt(buttonList) ; 
     //   getRandomFromList();
     //   checkButtonStatus(randomNumber);
        
        testPressed.add(4);
        
        winner(); 
        }else{
            System.out.println("Pressed! 4");
        }
       // Button4.setEnabled(false);
    }//GEN-LAST:event_Button4ActionPerformed

    private void Button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button6ActionPerformed
        if(!testPressed.contains(6)){
        System.out.println("Button 6 ");
        buttonList.remove(new Integer(6));
        System.out.println("Array Button 6 "+ buttonList);
        
        jbutton6 = playersturn;
        addIconToButton(Button6);
        
      //  Button6.setText(playersturn);
      
        recordSteps(6);
        playersturn();
        System.out.println("Button 6 Next Turn " +playersturn);
        
      //  randomNumber = randomX.nextInt(buttonList) ; 
     //   getRandomFromList();
     //   checkButtonStatus(randomNumber);
        
        testPressed.add(6);
        
        winner(); 
        }else{
            System.out.println("Pressed 6");
        }
       // Button6.setEnabled(false);
    }//GEN-LAST:event_Button6ActionPerformed

    private void Button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button7ActionPerformed
        if(!testPressed.contains(7)){
        System.out.println("Button 7 ");
        buttonList.remove(new Integer(7));
        System.out.println("Array Button 7 "+ buttonList);
        
        jbutton7 = playersturn;
        addIconToButton(Button7);
        
       //  Button7.setText(playersturn);
        recordSteps(7);
        playersturn();
        System.out.println("Button 7 Next Turn " +playersturn);
        
      //  randomNumber = randomX.nextInt(buttonList) ; 
      //  getRandomFromList();
      //  checkButtonStatus(randomNumber);
        
        testPressed.add(7);
        
        winner(); 
        }else{
            System.out.println("Pressed 7");
        }
      //  Button7.setEnabled(false);
    }//GEN-LAST:event_Button7ActionPerformed

    private void Button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button8ActionPerformed
        System.out.println("Condtains : " + testPressed);
        if(!testPressed.contains(8)){
        System.out.println("Button 8 ");
        buttonList.remove(new Integer(8));
        System.out.println("Array Button 8 "+ buttonList);
        
        jbutton8 = playersturn;
        addIconToButton(Button8);
        
       // Button8.setText(playersturn);
        recordSteps(8);
        playersturn();
        System.out.println("Button 8 Next Turn " +playersturn);
        
      //  randomNumber = randomX.nextInt(buttonList) ; 
     //   getRandomFromList();
     //   checkButtonStatus(randomNumber);
        
        testPressed.add(8);
        
        winner(); 
        }else{
            System.out.println("Pressed 8");
        }
     //   Button8.setEnabled(false);
    }//GEN-LAST:event_Button8ActionPerformed

    private void Button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button9ActionPerformed
        if(!testPressed.contains(9)){
        System.out.println("Button 9 ");
        buttonList.remove(new Integer(9));
        System.out.println("Array Button 9 "+ buttonList);
        
        jbutton9 = playersturn;
        addIconToButton(Button9);
        
       // Button9.setText(playersturn);
        recordSteps(9);
        playersturn();
        System.out.println("Button 9 Next Turn " +playersturn);
        
      //  randomNumber = randomX.nextInt(buttonList) ; 
      //  getRandomFromList();
      //  checkButtonStatus(randomNumber);
        
        testPressed.add(9);
        
        winner(); 
        }else{
            System.out.println("Pressed 9");
        }
      //  Button9.setEnabled(false);
    }//GEN-LAST:event_Button9ActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
       System.exit(0);
    }//GEN-LAST:event_ExitButtonActionPerformed
    int checkRecordingStatus = 0 ; 
    private void RecordingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecordingButtonActionPerformed
        // TODO add your handling code here:
        if (checkRecordingStatus == 0 ){
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Do you want record?", "Recording Message", dialogButton);
        if(dialogResult == 0) {
        System.out.println("Yes");
        record = 1 ;
        Image img = null;
            try {
                img = ImageIO.read(getClass().getResource("icons/startrecording.png"));
            } catch (IOException ex) {
                Logger.getLogger(Player1andPlayer2.class.getName()).log(Level.SEVERE, null, ex);
            }
        RecordingButton.setIcon(new ImageIcon(img));
        checkRecordingStatus++;
        } else {
        System.out.println("No");
        record = 0;
        } 
        }else{
            int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Do you want stop recording?", "Recording Message", dialogButton);
        if(dialogResult == 0) {
        System.out.println("Yes");
        record = 0 ;
        Image img = null;
            try {
                img = ImageIO.read(getClass().getResource("icons/record.png"));
            } catch (IOException ex) {
                Logger.getLogger(Player1andPlayer2.class.getName()).log(Level.SEVERE, null, ex);
            }
        RecordingButton.setIcon(new ImageIcon(img));
        } else {
        System.out.println("No");
        record = 0;
        }
        }
    }//GEN-LAST:event_RecordingButtonActionPerformed

    private void teamIconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamIconActionPerformed
        // TODO add your handling code here:
        TeamInfo team = new TeamInfo();
        team.show();
        
    }//GEN-LAST:event_teamIconActionPerformed

    private void ViewRecordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewRecordsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ViewRecordsActionPerformed
    Clip clip;
    public void playSound(String soundName)
 {
   try 
   {
    // AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File(soundName).getAbsoluteFile( ));
       AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File(getClass().getResource("icons/gameplaysound.wav").getFile()).getAbsoluteFile( ));
   // AudioInputStream audioInputStream = (AudioInputStream) getClass().getResourceAsStream("gameplaysound.wav");
    clip = AudioSystem.getClip( );
    clip.open(audioInputStream);
    clip.start();
   }
   catch(Exception ex)
   {
     System.out.println("Error with playing sound.");
     ex.printStackTrace( );
   }
 }
    int checkMusicIcon=0;
    private void PlayMusicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayMusicButtonActionPerformed
        // TODO add your handling code here:
        if(checkMusicIcon == 0 ){
        playSound("D:\\gameplaysound.wav");
        Image img = null;
            try {
                img = ImageIO.read(getClass().getResource("icons/pauseMusic.png"));
            } catch (IOException ex) {
                Logger.getLogger(Player1andPlayer2.class.getName()).log(Level.SEVERE, null, ex);
            }
        PlayMusicButton.setIcon(new ImageIcon(img));
        checkMusicIcon++; }
        else{
            clip.stop();
        Image img = null;
            try {
                img = ImageIO.read(getClass().getResource("icons/playmusicicon.png"));
            } catch (IOException ex) {
                Logger.getLogger(Player1andPlayer2.class.getName()).log(Level.SEVERE, null, ex);
            }
        PlayMusicButton.setIcon(new ImageIcon(img));
        checkMusicIcon = 0;
        }
    }//GEN-LAST:event_PlayMusicButtonActionPerformed
      
    /**
     * @param args the command line arguments
     */
    private void resetgame()
{
       Button1.setText("");
       Button2.setText("");
       Button3.setText("");
       Button5.setText("");
       Button4.setText("");
       Button6.setText("");
       Button7.setText("");
       Button8.setText("");
       Button9.setText("");
       Button1.setIcon(null);
       Button2.setIcon(null);
       Button3.setIcon(null);
       Button4.setIcon(null);
       Button5.setIcon(null);
       Button6.setIcon(null);
       Button7.setIcon(null);
       Button8.setIcon(null);
       Button9.setIcon(null);
}
    String XorOwins; 
    private void playerXwins()
{
    if (XorOwins.equals("X")){
        try {
            Thread.sleep(2000);
            WinVideoJFrame_1 wjf=new WinVideoJFrame_1();
            wjf.show();
           //   dispose();
           // resetgame();
        } catch (InterruptedException ex) {
            Logger.getLogger(PlayingWithComputer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }else{
        try {
            Thread.sleep(2000);
            LoseVideoJFrame wjf=new LoseVideoJFrame();
            wjf.show();
         //   dispose();
           // resetgame();
        } catch (InterruptedException ex) {
            Logger.getLogger(PlayingWithComputer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
} 
    
        private void playerXLose()
{
    
        try {
            Thread.sleep(2000);
            LoseVideoJFrame wjf=new LoseVideoJFrame();
            wjf.show();
         //   dispose();
           // resetgame();
        } catch (InterruptedException ex) {
            Logger.getLogger(Player1andPlayer2.class.getName()).log(Level.SEVERE, null, ex);
        }
} 
            private void playerOLose()
{
    
        try {
            Thread.sleep(2000);
            LoseVideoJFrame wjf=new LoseVideoJFrame();
            wjf.show();
         //   dispose();
           // resetgame();
        } catch (InterruptedException ex) {
            Logger.getLogger(Player1andPlayer2.class.getName()).log(Level.SEVERE, null, ex);
        }
} 
            
  private void playerOwins()
{
        try {
            Thread.sleep(2000);  Thread.sleep(2000);
            WinVideoJFrame_1 wjf=new WinVideoJFrame_1();
            wjf.show();
        } catch (InterruptedException ex) {
            Logger.getLogger(Player1andPlayer2.class.getName()).log(Level.SEVERE, null, ex);
        }
      winJFrame wjf=new winJFrame();
      wjf.show();
      dispose();
     // resetgame();
} 
  
  private void playersturn()
{
      if(playersturn.equalsIgnoreCase("X"))
{
      playersturn = "O";
}
      else
{
     playersturn = "X";
}
}
  
    private void reversePlayersTurn()
{
      if(playersturn.equalsIgnoreCase("O"))
{
      playersturn = "X";
}
      else
{
     playersturn = "O";
}
}
  
 public static String winnerName;
String jbutton1 ;
String jbutton2 ;
String jbutton3 ;
String jbutton4 ;
String jbutton5 ;
String jbutton6 ;
String jbutton7 ;
String jbutton8 ;
String jbutton9 ;
 

 private void winner()
{
// getPlayerName();

if(jbutton1=="X" && jbutton2 == "X" && jbutton3 == "X")
{
    System.out.println("Case 1 ");
    winnerName = playerName;
    System.out.println("Winner Name is " + winnerName);
    XorOwins = "X";
    playerXwins();
           
// resetgame();
    
}
else if(jbutton4=="X" && jbutton5 == "X" && jbutton6 == "X")
{
    System.out.println("Case 1 ");
    winnerName = playerName;
    System.out.println("Winner Name is " + winnerName);
    XorOwins = "X";
playerXwins();
//resetgame();
}
else if(jbutton7=="X" && jbutton8 == "X" && jbutton9 == "X")
{
    System.out.println("Case 1 ");
    winnerName = playerName;
    System.out.println("Winner Name is " + winnerName);
    XorOwins = "X";
playerXwins();
// resetgame();
}
else if(jbutton1 == "X" && jbutton5 == "X" && jbutton9 == "X")
{
    System.out.println("Case 1 ");
    winnerName = playerName;
    
    System.out.println("Winner Name is " + winnerName);
    XorOwins = "X";
playerXwins();
// resetgame();
}
else if(jbutton2=="X" && jbutton5 == "X" && jbutton8 == "X")
{
    System.out.println("Case 1 ");
    winnerName = playerName;
    System.out.println("Winner Name is " + winnerName);
    XorOwins = "X";
playerXwins();
// resetgame();
}
else if(jbutton3=="X" && jbutton6 == "X" && jbutton9 == "X")
{
    System.out.println("Case 1 ");
    winnerName = playerName;
    System.out.println("Winner Name is " + winnerName);
    XorOwins = "X";
playerXwins();
// resetgame();
}
else if(jbutton1=="X" && jbutton4 == "X" && jbutton7 == "X")
{
    System.out.println("Case 1 ");
    winnerName = playerName;
    System.out.println("Winner Name is " + winnerName);
    XorOwins = "X";
playerXwins();
// resetgame();
}
else if(jbutton3=="X" && jbutton5 == "X" && jbutton7== "X")
{
    System.out.println("Case 9 ");
winnerName = playerName;
    System.out.println("Winner Name is " + winnerName);
    XorOwins = "X";
playerXwins();
//resetgame();

} 
//WIN PLAYER O
else if(jbutton1=="O" && jbutton2 == "O" && jbutton3 == "O")
{
    System.out.println("Case O1 ");
winnerName = "The AI ";
    System.out.println("Winner Name is " + winnerName);
    XorOwins = "O";
playerXwins();
// resetgame();
}
else if(jbutton4=="O" && jbutton5 == "O" && jbutton6 == "O")
{
    System.out.println("Case O1 ");
winnerName = "The AI ";
    System.out.println("Winner Name is " + winnerName);
    XorOwins = "O";
playerXwins();
// resetgame();
}
else if(jbutton7=="O" && jbutton8 == "O" && jbutton9 == "O")
{
    System.out.println("Case O1 ");
winnerName = "The AI ";
    System.out.println("Winner Name is " + winnerName);
        XorOwins = "O";

playerXwins();
// resetgame();
}
else if(jbutton1 == "O" && jbutton5 == "O" && jbutton9 == "O")
{
    System.out.println("Case O1 ");
winnerName = "The AI ";
    System.out.println("Winner Name is " + winnerName);
        XorOwins = "O";

playerXwins();
// resetgame();
}
else if(jbutton2=="O" && jbutton5 == "O" && jbutton8 == "O")
{
    System.out.println("Case O1 ");
winnerName = "The AI ";
    System.out.println("Winner Name is " + winnerName);
        XorOwins = "O";

playerXwins();
// resetgame();
}
else if(jbutton3=="O" && jbutton6 == "O" && jbutton9 == "O")
{
    System.out.println("Case O1 ");
winnerName = "The AI ";
    System.out.println("Winner Name is " + winnerName);
        XorOwins = "O";

playerXwins();
// resetgame();
}
else if(jbutton1=="O" && jbutton4 == "O" && jbutton7 == "O")
{
    System.out.println("Case O1 ");
winnerName = "The AI ";
    System.out.println("Winner Name is " + winnerName);
        XorOwins = "O";

playerXwins();
// resetgame();

}
else if(jbutton3=="O" && jbutton5 == "O" && jbutton7== "O")
{
    System.out.println("Case O1 ");
winnerName = "The AI ";
    System.out.println("Winner Name is " + winnerName);
        XorOwins = "O";

    playerXwins();
   // resetgame();
   
}

}

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Player1andPlayer2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Player1andPlayer2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Player1andPlayer2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Player1andPlayer2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Player1andPlayer2().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Player1andPlayer2.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button1;
    private javax.swing.JButton Button2;
    private javax.swing.JButton Button3;
    private javax.swing.JButton Button4;
    private javax.swing.JButton Button5;
    private javax.swing.JButton Button6;
    private javax.swing.JButton Button7;
    private javax.swing.JButton Button8;
    private javax.swing.JButton Button9;
    private javax.swing.JButton ExitButton;
    private javax.swing.JButton PlayMusicButton;
    private javax.swing.JButton RecordingButton;
    private javax.swing.JButton ResetButton;
    public static javax.swing.JLabel ShowPlayerOneName;
    public static javax.swing.JLabel ShowPlayerTwoName;
    private javax.swing.JButton ViewRecords;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JButton teamIcon;
    // End of variables declaration//GEN-END:variables
public static void centreWindow(Window frame) {
    Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
    int x = (int) ((dimension.getWidth() - frame.getWidth()) / 2);
    int y = (int) ((dimension.getHeight() - frame.getHeight()) / 2);
    frame.setLocation(x, y);
}

    private void showAllButtons() {
        Button1.setEnabled(true);
        Button2.setEnabled(true);
        Button3.setEnabled(true);
        Button5.setEnabled(true);
        Button4.setEnabled(true);
        Button6.setEnabled(true);
        Button7.setEnabled(true);
        Button8.setEnabled(true);
        Button9.setEnabled(true);
    }

    private void checkButtonStatus(int df) {
        if (Button1.isEnabled() && df == 1){
           // Button1.setText(playersturn);
          //  Button1.setEnabled(false);
            recordSteps(1);
            jbutton1 = playersturn;
            addIconToButton(Button1);
            playersturn();
            buttonList.remove(new Integer(1));
            
        }else if (Button2.isEnabled() && df == 2){
            Button2.setText(playersturn);
           // Button2.setEnabled(false);
            recordSteps(2);
            jbutton2 = playersturn;
        addIconToButton(Button2);
            playersturn();
            buttonList.remove(new Integer(2));
        }else if (Button3.isEnabled() && df == 3){
            Button3.setText(playersturn);
         //   Button3.setEnabled(false);
            jbutton3 = playersturn;
        addIconToButton(Button3);
            recordSteps(3);
            playersturn();
            buttonList.remove(new Integer(3));
        }else if (Button4.isEnabled() && df == 4){
            Button4.setText(playersturn);
          //  Button4.setEnabled(false);
            jbutton4 = playersturn;
        addIconToButton(Button4);
            recordSteps(4);
            playersturn();
            buttonList.remove(new Integer(4));
        }else if (Button5.isEnabled() && df == 5){
            Button5.setText(playersturn);
         //   Button5.setEnabled(false);
            jbutton5 = playersturn;
            addIconToButton(Button5);
            recordSteps(5);
            playersturn();
            buttonList.remove(new Integer(5));
        }else if (Button6.isEnabled() && df == 6){
            Button6.setText(playersturn);
          //  Button6.setEnabled(false);
            jbutton6 = playersturn;
            addIconToButton(Button6);
            recordSteps(6);
            playersturn();
            buttonList.remove(new Integer(6));
        }else if (Button7.isEnabled() && df == 7){
            Button7.setText(playersturn);
          //  Button7.setEnabled(false);
            jbutton7 = playersturn;
            addIconToButton(Button7);
            recordSteps(7);
            playersturn();
            buttonList.remove(new Integer(7));
        }else if (Button8.isEnabled() && df == 8){
            Button8.setText(playersturn);
         //   Button8.setEnabled(false);
            jbutton8 = playersturn;
            addIconToButton(Button8);
            recordSteps(8);
            playersturn();
            buttonList.remove(new Integer(8));
        }else if (Button9.isEnabled() && df == 9){
            Button9.setText(playersturn);
       //     Button9.setEnabled(false);
            jbutton9 = playersturn;
        addIconToButton(Button9);
            recordSteps(9);
            playersturn();
            buttonList.remove(new Integer(9));
        }
    }

    private void checkRandomStatus(int randomNumber) {
        if (randomNumber == 1 && !Button1.isEnabled()) {
            randomNumber = randomX.nextInt(9) + 1;
        }else if (randomNumber == 2 && !Button2.isEnabled()) {
            randomNumber = randomX.nextInt(9) + 1;
        }else if (randomNumber == 3 && !Button3.isEnabled()) {
            randomNumber = randomX.nextInt(9) + 1;
        }else if (randomNumber == 4 && !Button5.isEnabled()) {
            randomNumber = randomX.nextInt(9) + 1;
        }else if (randomNumber == 5 && !Button4.isEnabled()) {
            randomNumber = randomX.nextInt(9) + 1;
        }else if (randomNumber == 6 && !Button6.isEnabled()) {
            randomNumber = randomX.nextInt(9) + 1;
        }else if (randomNumber == 7 && !Button7.isEnabled()) {
            randomNumber = randomX.nextInt(9) + 1;
        }else if (randomNumber == 8 && !Button8.isEnabled()) {
            randomNumber = randomX.nextInt(9) + 1;
        }else if (randomNumber == 9 && !Button9.isEnabled()) {
            randomNumber = randomX.nextInt(9) + 1;
        }
    }

    private void arrayListCount() {
        buttonList.clear();
        for (int x = 1 ; x < 10;x++){
            buttonList.add(x);}
        System.out.println("Array " + buttonList);
    }
    
    private void getRandomFromList() {
        int index = 0;
        for (int i = 0; i < buttonList.size(); i++) 
        {
             index = (int)(Math.random() * buttonList.size());
        }
        if(buttonList.size() ==0){
            System.out.println("Winner");
        }else{
        randomNumber = buttonList.get(index);}
        System.out.println("Random Element is :"
                               + randomNumber);
    }

  /*  private void getPlayerName() {
       if(PlayerNameText.getText().isEmpty()){
    playerName = "Player One";
}else{
    playerName = PlayerNameText.getText();
}
    }
*/

    private void recordSteps(int buttonNumber) {
        System.out.println("Turn Record : " + playersturn);
        System.out.println("Button Number ? " + buttonNumber);
       // reversePlayersTurn();
        if(record ==1 ){
        switch(buttonNumber){
                case 1:
                arrayButtonNumberRecording.add(1);
                arrayButtonXorORecording.add(playersturn);
                    System.out.println("Array Size In : " + arrayButtonNumberRecording.size());
                    break;
                case 2:
                arrayButtonNumberRecording.add(2);
                arrayButtonXorORecording.add(playersturn);
                    System.out.println("Array Size In 2 : " + arrayButtonNumberRecording.size());
                    break;
                case 3:
                arrayButtonNumberRecording.add(3);
                arrayButtonXorORecording.add(playersturn);
                break;
                case 4:
                arrayButtonNumberRecording.add(4);
                arrayButtonXorORecording.add(playersturn);
                break;
                case 5:
                arrayButtonNumberRecording.add(5);
                arrayButtonXorORecording.add(playersturn);
                break;
                case 6:
                arrayButtonNumberRecording.add(6);
                arrayButtonXorORecording.add(playersturn);
                break;
                case 7:
                arrayButtonNumberRecording.add(7);
                arrayButtonXorORecording.add(playersturn);
                break;
                case 8:
                arrayButtonNumberRecording.add(8);
                arrayButtonXorORecording.add(playersturn);
                break;
                case 9:
                arrayButtonNumberRecording.add(9);
                arrayButtonXorORecording.add(playersturn);
                break;
                default: System.out.println("Nothing");
        }
        }else{
            System.out.println("No Recording");
        }
    }

    String path ; 
    private void saveRecordingFile() {
        path = "D:\\XORecordings\\XOGameRecord.txt";
        try {  
      File myObj = new File(path);
      if (myObj.createNewFile()) {  
        System.out.println("File created: " + myObj.getName());  
      } else {  
        System.out.println("File already exists.");  
      }  
    } catch (IOException e) {
      System.out.println("An error occurred.");
      e.printStackTrace();  
    }
       try {
      FileWriter myWriter = new FileWriter(path);
      for( int r =0; r < arrayButtonNumberRecording.size() ; r++){
            myWriter.write("Step Number " + (r+1) +
                    " : Button Number " + arrayButtonNumberRecording.get(r) + 
                    " With Sign " + arrayButtonXorORecording.get(r) + System.lineSeparator() );
        }
      myWriter.close();
      System.out.println("Successfully wrote to the file.");
    } catch (IOException e) {
      System.out.println("An error occurred.");
      e.printStackTrace();
    }
        
    }
    
    
    private void addIconToButton(JButton btnx) {
        if (playersturn.equals("X")){
            try {
    Image img = ImageIO.read(getClass().getResource("icons/xicon.png"));
    btnx.setIcon(new ImageIcon(img));
  } catch (Exception ex) {
    System.out.println(ex);
  }
        }else{
            try {
    Image img = ImageIO.read(getClass().getResource("icons/oicon.png"));
    btnx.setIcon(new ImageIcon(img));
  } catch (Exception ex) {
    System.out.println(ex);
  }
        }
  
    }
    
    
    @Override
    public void dispose() {
        super.dispose(); 
        clip.stop();
        clip.close();
    }

    private void setEnableFales() {
        Button1.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
        Button1.setContentAreaFilled(false);
        Button2.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
        Button2.setContentAreaFilled(false);
        Button3.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
        Button3.setContentAreaFilled(false);
        Button5.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
        Button5.setContentAreaFilled(false);
        Button4.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
        Button4.setContentAreaFilled(false);
        Button6.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
        Button6.setContentAreaFilled(false);
        Button7.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
        Button7.setContentAreaFilled(false);
        Button8.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
        Button8.setContentAreaFilled(false);
        Button9.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
        Button9.setContentAreaFilled(false);
        ExitButton.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
        ExitButton.setContentAreaFilled(false);
        RecordingButton.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
        RecordingButton.setContentAreaFilled(false);
        teamIcon.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
        teamIcon.setContentAreaFilled(false);
        ViewRecords.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
        ViewRecords.setContentAreaFilled(false);
        PlayMusicButton.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
        PlayMusicButton.setContentAreaFilled(false);
        ResetButton.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
        ResetButton.setContentAreaFilled(false);
    }
}
